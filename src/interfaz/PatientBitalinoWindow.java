/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import BITalino.BITalino;
import BITalino.BITalinoException;
import Utilities.FunctionsInterfaz;
import java.awt.Color;

/**
 *
 * @author carmen
 */
public class PatientBitalinoWindow extends javax.swing.JFrame {

    public static BITalino bitalino = null;

    /**
     * Creates new form PatientBitalinoWindow
     */
    public PatientBitalinoWindow() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.MacError.setVisible(false);
        this.SamplingError.setVisible(false);
        this.ErrorText.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BackBut = new javax.swing.JButton();
        FindBut = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        MacInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        SamplingRateInput = new javax.swing.JTextField();
        SamplingError = new javax.swing.JLabel();
        MacError = new javax.swing.JLabel();
        SignalInput = new javax.swing.JComboBox<>();
        ErrorText = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BackBut.setText("Back");
        BackBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButActionPerformed(evt);
            }
        });

        FindBut.setText("Find");
        FindBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindButActionPerformed(evt);
            }
        });

        jLabel1.setText("INSERT YOUR BITALINO MAC:");

        MacInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MacInputActionPerformed(evt);
            }
        });

        jLabel2.setText("INSERT YOUR SAMPLING RATE:");

        SamplingRateInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SamplingRateInputActionPerformed(evt);
            }
        });

        SamplingError.setText("It has to be 10, 100 or 1000");

        MacError.setText("This is not a MAC adress");

        SignalInput.setMaximumRowCount(3);
        SignalInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ECG", "Acelometer", "Both" }));
        SignalInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignalInputActionPerformed(evt);
            }
        });

        ErrorText.setText("Something went wrong");

        jLabel3.setText("aa:aa:aa:aa:aa:aa");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(BackBut)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(FindBut)
                .addGap(50, 50, 50))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(SignalInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ErrorText))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(SamplingRateInput, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(MacInput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(jLabel3)))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(SamplingError)
                        .addGap(41, 41, 41))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(MacError)
                        .addGap(69, 69, 69))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(105, 105, 105))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(4, 4, 4)
                .addComponent(MacInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MacError)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(SamplingRateInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SamplingError, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SignalInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ErrorText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BackBut)
                    .addComponent(FindBut))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MacInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MacInputActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_MacInputActionPerformed

    private void BackButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButActionPerformed
        PatientInsideWindow rd = new PatientInsideWindow();
        this.setVisible(false);
        rd.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_BackButActionPerformed

    private void FindButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindButActionPerformed
        bitalino = null;
        int samplingRate = 0;
        boolean error = true;
        String macAddress = "";
        macAddress = this.MacInput.getText();
        String sampling = this.SamplingRateInput.getText();

        if (!FunctionsInterfaz.checkMac(macAddress)) {
            this.MacError.setForeground(Color.red);
            this.MacError.setVisible(true);
            error = true;
        } else {
            this.MacError.setVisible(false);
            error = false;
        }

        samplingRate = FunctionsInterfaz.checkSamping(sampling);
        if (samplingRate == 1) {
            this.SamplingError.setText("The sampling rate is a number");
            this.SamplingError.setForeground(Color.red);
            this.SamplingError.setVisible(true);
            error = true;
        } else if (samplingRate == 1) {
            this.SamplingError.setText("The sampling rate has to be 10,100 or 1000");
            this.SamplingError.setForeground(Color.red);
            this.SamplingError.setVisible(true);
            error = true;
        }

        if (!error) {
            try {
                bitalino.open(macAddress, samplingRate);
                this.ErrorText.setVisible(false);
                int a = this.SignalInput.getSelectedIndex();
                boolean er = FunctionsInterfaz.checkChannel(a, bitalino);
            } catch (BITalinoException be) {
                this.ErrorText.setForeground(Color.red);
                this.ErrorText.setText("Something went wrong");
                this.ErrorText.setVisible(true);
            }

        }

    }//GEN-LAST:event_FindButActionPerformed

    private void SamplingRateInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SamplingRateInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SamplingRateInputActionPerformed

    private void SignalInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignalInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SignalInputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientBitalinoWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientBitalinoWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientBitalinoWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientBitalinoWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientBitalinoWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackBut;
    private javax.swing.JLabel ErrorText;
    private javax.swing.JButton FindBut;
    private javax.swing.JLabel MacError;
    private javax.swing.JTextField MacInput;
    private javax.swing.JLabel SamplingError;
    private javax.swing.JTextField SamplingRateInput;
    private javax.swing.JComboBox<String> SignalInput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
